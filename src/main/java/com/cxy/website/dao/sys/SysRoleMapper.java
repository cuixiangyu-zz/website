package com.cxy.website.dao.sys;

import com.cxy.website.dao.sys.sqlprovider.SysRoleSqlProvider;
import com.cxy.website.model.sys.SysRole;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public interface SysRoleMapper {
    /**
     *@Description 根据角色信息查询角色
     *@Param roleId 角色id
     *@Return Role 角色信息
     *@Author 侯森林
     *@Date 2019-9-9
     */
    @SelectProvider(type = SysRoleSqlProvider.class, method = "findRole")
    List<SysRole> findRole(@Param("roleName") String roleName);
    /**
     *@Description 角色数量信息
     *@Param role 角色名称
     *@Return  角色数量信息
     *@Author 侯森林
     *@Date 2019-9-18
     */
    @SelectProvider(type = SysRoleSqlProvider.class, method = "countRoleList")
    Integer countRoleList(@Param("role") String role);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_sys_role
     *
     * @mbg.generated
     */
    @Delete({
        "delete from tb_sys_role",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_sys_role
     *
     * @mbg.generated
     */
    @Insert({
        "insert into tb_sys_role (id, role_name, ",
        "description, is_del, ",
        "create_time, remark)",
        "values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, ",
        "#{description,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})"
    })
    int insert(SysRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_sys_role
     *
     * @mbg.generated
     */
    @InsertProvider(type= SysRoleSqlProvider.class, method="insertSelective")
    int insertSelective(SysRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_sys_role
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, role_name, description, is_del, create_time, remark",
        "from tb_sys_role",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="role_name", property="roleName", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_del", property="isDel", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR)
    })
    SysRole selectByPrimaryKey(Integer id);
    /**
     *@Description 根据角色名称查询角色信息
     *@Param role 角色名称
     *@Return Role 角色信息
     *@Author 侯森林
     *@Date 2019-9-18
     */
    @Select("select * from tb_sys_role where role_name=#{roleName} and is_del='0'")
    SysRole findByRoleName(@Param("roleName") String roleName);

    @Select("select * from tb_sys_role where is_del='0'")
    List<SysRole> findAllRole();
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_sys_role
     *
     * @mbg.generated
     */
    @UpdateProvider(type=SysRoleSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SysRole record);

}