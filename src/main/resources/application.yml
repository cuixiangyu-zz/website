server:
  port: 8081
  servlet:
    context-path: /website

spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/website?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8
    username: root
    password: 123456
    #    url: jdbc:mysql://127.0.0.1:3306/hospcall?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8
    #    username: root
    #    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方
    filters:
      commons-log.connection-logger-name: stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true

  mvc:
    static-path-pattern: /resources/**
  resources:
    static-locations: classpath:/static,classpath:/public,classpath:/resources,classpath:/META-INF/resources,file:/E:/picture

  thymeleaf:
    #模板的模式，支持 HTML, XML TEXT JAVASCRIPT
    mode: HTML
    #开发配置为false,避免修改模板还要重启服务器
    cache: false
    #配置模板路径，默认是templates，可以不用配置
    prefix: classpath:/templates
    suffix: .html
    servlet:
      content-type: text/html

mybatis:
  configuration:
    map-underscore-to-camel-case: true #开启驼峰映射
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

logging:
  level:
    #打印SQL信息
    com.intehel.dao: debug
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

#系统操作日志记录在controller中操作类型对应配置
sysLog:
  #controller中不进行日志记录的方法名开头
  exclude: select,find,list,get
  #新增对应的方法名开头
  insert: add,insert
  #修改对应的方法名开头
  update: update,save
  #删除对应的方法名开头
  delete: del,remove

swagger:
  show: true


